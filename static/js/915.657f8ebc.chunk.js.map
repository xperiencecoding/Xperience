{"version":3,"file":"static/js/915.657f8ebc.chunk.js","mappings":"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","sources":["Animation.ts","components/generic/CodingForm.tsx","components/generic/ConsultingForm.tsx","components/pages/Form.tsx"],"sourcesContent":["// Custom animations class built on top of framer-motion's variants framework.\r\n// Uses builder pattern for quick instantiation into objects to maximize reusage.\r\nexport class Anim {\r\n\r\n    inactive: any\r\n    active: any\r\n\r\n    constructor(i: any = {}, a: any = {}) {\r\n        this.inactive = i;\r\n        this.active = a;\r\n        this.active[\"transition\"] = {};\r\n    }\r\n\r\n    spring(stiffness: number, delay: number = 0, damping: number = 10, mass: number = 1) {\r\n        this.active[\"transition\"][\"stiffness\"] = stiffness;\r\n        this.active[\"transition\"][\"type\"] = \"spring\";\r\n        this.active[\"transition\"][\"damping\"] = damping;\r\n        this.active[\"transition\"][\"mass\"] = mass;\r\n        this.active[\"transition\"][\"delay\"] = delay;\r\n        return this;\r\n    }\r\n\r\n    // delay children\r\n    delay_children(dur: number = 0.5) {\r\n        this.active[\"transition\"][\"delayChildren\"] = dur;\r\n        return this;\r\n    }\r\n\r\n    // stagger children\r\n    stagger(amt = 0.05, reverse = false) {\r\n        this.active[\"transition\"][\"staggerChildren\"] = amt;\r\n        this.active[\"transition\"][\"staggerDirection\"] = reverse ? -1 : 1;\r\n        return this;\r\n    }\r\n\r\n    when(afterInstead = false) {\r\n        if (!afterInstead) this.active[\"transition\"][\"when\"] = \"beforeChildren\"\r\n        else this.active[\"transition\"][\"when\"] = \"afterChildren\"\r\n        return this\r\n    }\r\n    loop(type: \"loop\" | \"reverse\" | \"mirror\" = \"mirror\", times: number | \"Infinity\" = \"Infinity\", delay: number = 0) {\r\n        this.active[\"transition\"][\"repeatType\"] = type\r\n        this.active[\"transition\"][\"repeat\"] = times\r\n        this.active[\"transition\"][\"repeatDelay\"] = delay\r\n        return this\r\n    }\r\n\r\n    add(prop: string, inactive: string, active: string) {\r\n        this.inactive[prop] = inactive\r\n        this.active[prop] = active\r\n        return this;\r\n    }\r\n\r\n    default() {\r\n        this.spring(100);\r\n        this.delay_children();\r\n        return this;\r\n    }\r\n\r\n    // clear transitions if child in staggered animation\r\n    // transition inherited from parent\r\n    build(transitions = true, reverse = false) {\r\n        if (transitions && reverse) this.inactive[\"transition\"] = this.active[\"transition\"]\r\n        else if (!transitions) {\r\n            delete this.inactive[\"transition\"]\r\n            delete this.active[\"transition\"]\r\n        }\r\n        let r = {\r\n            inactive: this.inactive,\r\n            active: this.active,\r\n        }\r\n        return r\r\n    }\r\n\r\n    static getSpring(stiffness = 120, delay = 0, damping = 20, mass = 1) {\r\n        return {\r\n            type: \"spring\",\r\n            stiffness: stiffness,\r\n            delay: delay,\r\n            damping: damping,\r\n            mass: mass,\r\n        }\r\n    }\r\n\r\n    static opacity(duration: number): Anim {\r\n        return new Anim({\r\n            opacity: 0,\r\n        },{\r\n            opacity: 1,\r\n        });\r\n    }\r\n\r\n    static point(coords: [number, number]) {\r\n        return new Anim({\r\n            x: coords[0] + \"px\",\r\n            y: coords[1] + \"px\",\r\n            opacity: 0,\r\n        },{\r\n            x: 0,\r\n            y: 0,\r\n            opacity: 1,\r\n        });\r\n    }\r\n\r\n    static flipX() {\r\n        return new Anim({\r\n            transform: \"rotateX(180deg)\"\r\n        },{\r\n            transform: \"rotateX(0deg)\",\r\n        });\r\n    }\r\n\r\n    static flipY() {\r\n        return new Anim({\r\n            transform: \"rotateY(180deg)\"\r\n        },{\r\n            transform: \"rotateY(0deg)\",\r\n        });\r\n    }\r\n\r\n    static bounceY(y: number) {\r\n        return new Anim({\r\n            y: y + \"px\",\r\n            opacity: 0,\r\n        },{\r\n            y: \"0px\",\r\n            opacity: 1,\r\n        });\r\n    }\r\n\r\n    static bounceX(x: number) {\r\n        return new Anim({\r\n            x: x + \"px\",\r\n            opacity: 0,\r\n        },{\r\n            x: \"0px\",\r\n            opacity: 1,\r\n        });\r\n    }\r\n\r\n    static scale(x: [number, number] = [0, 1], y: [number, number] = [0, 1]) {\r\n        return new Anim({\r\n            transform: `scale(${x[0]}, ${y[0]})`,\r\n            opacity: 0,\r\n        },{\r\n            transform: `scale(${x[1]}, ${y[1]})`,\r\n            opacity: 1,\r\n        })\r\n    }\r\n}\r\n\r\nexport function hexToRgb(hex: string) {\r\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex) ?? \"\";\r\n    return parseInt(result[1], 16) + \",\" +\r\n        parseInt(result[2], 16) + \",\" +\r\n        parseInt(result[3], 16) + \",\"\r\n}\r\n\r\nexport function range(from: number, to: number, step: number) {\r\n    return [...Array(Math.floor((to - from) / step) + 1)].map((_, i) => from + i * step);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../scss/core.scss\"\r\nimport \"../../scss/generic.scss\"\r\nimport { motion } from \"framer-motion\";\r\nimport { Anim } from \"../../Animation\";\r\n\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport List from \"@mui/material/List\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { makeStyles, styled } from \"@mui/material/styles\";\r\nimport { Divider, Stack } from \"@mui/material\";\r\n\r\nimport emailjs from '@emailjs/browser'\r\n\r\nconst TextEntryField = styled(TextField)({\r\n    '& label.Mui-focused': {\r\n        color: 'white',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n        color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'white',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nfunction CodingForm() {\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    function sendEmail(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault(); // Prevent the default form submission\r\n    \r\n        // Extract the form data\r\n\r\n        const form = e.currentTarget;\r\n        const formData = new FormData(e.currentTarget);\r\n    \r\n        // Prepare the template parameters\r\n        const templateParams = {\r\n            name: formData.get('name') || '', // Fallback to empty string if null\r\n            email: formData.get('email') || '',\r\n            grade: formData.get('grade') || '',\r\n            message: formData.get('other') || ''\r\n            // beginner: (form.querySelector('input[name=\"beginner\"]') as HTMLInputElement).checked ? 'Yes' : 'No',\r\n            // intermediate: (form.querySelector('input[name=\"intermediate\"]') as HTMLInputElement).checked ? 'Yes' : 'No',\r\n            // robotics: (form.querySelector('input[name=\"robotics\"]') as HTMLInputElement).checked ? 'Yes' : 'No',\r\n            // web: (form.querySelector('input[name=\"web\"]') as HTMLInputElement).checked ? 'Yes' : 'No',\r\n            \r\n        };\r\n    \r\n        emailjs\r\n            .send(\"service_sbcmhmr\", \"template_ky3kmhe\", templateParams, \"76imFaTEAYXwAt6pw\")\r\n            .then(\r\n                (result) => {\r\n                    console.log(result.text);\r\n                },\r\n                (error) => {\r\n                    console.log(error.text);\r\n                }\r\n            );\r\n\r\n            emailjs\r\n            .send(\"service_3qcfjxw\", \"template_ro0p97w\", templateParams, \"35zn_rtgX1-qsLE90\")\r\n            .then(\r\n                (result) => {\r\n                    console.log(result.text);\r\n                },\r\n                (error) => {\r\n                    console.log(error.text);\r\n                }\r\n            );\r\n    \r\n        e.currentTarget.reset(); // Reset the form after submission\r\n    }\r\n\r\n    return <motion.div className=\"l\"\r\n        initial={{ y: 10, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        exit={{ y: -10, opacity: 0 }}\r\n        transition={{ duration: .6 }}\r\n    >\r\n        <form className=\"coding-form\" onSubmit={sendEmail}>\r\n    <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                divider={<Divider orientation=\"vertical\" flexItem />}\r\n            >\r\n\r\n                <TextEntryField\r\n                    style={{ width: \"200px\" }}\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    label=\"Name\"\r\n                    name = \"name\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                />\r\n\r\n                <TextEntryField\r\n                    style={{ width: \"200px\" }}\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    name = \"email\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                />\r\n\r\n                <TextEntryField\r\n                    style={{ width: \"200px\" }}\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    label=\"Grade Level\"\r\n                    name = \"companyname\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                />\r\n            </Stack>\r\n\r\n            <br />\r\n            <Divider variant=\"middle\" style={{ background: 'white', borderBottomWidth: 1, marginLeft: '4%', marginRight: '4%' }} />\r\n\r\n\r\n            {/* <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n\r\n            >\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Sponsor Lcoal Events?\" name = \"sponsor\"/>\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Need interns?\" name = \"interns\"/>\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Need a project completed?\" />\r\n            </Stack> */}\r\n            <br/>\r\n            \r\n            <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={0}\r\n                \r\n            >\r\n                {/* <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Need IT support?\" name = \"IT\"/>\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\"\r\n                }} checked={checked} onChange={handleChange} />} label=\"\" /> */}\r\n                <TextEntryField\r\n                    style={{ width: \"500px\", }}\r\n                    size=\"medium\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    // disabled={!checked}\r\n                    label= \"Message \"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                    name = \"other\"\r\n                    multiline\r\n                    rows={2}\r\n                    \r\n                />\r\n            </Stack>\r\n            <br />\r\n            <Box textAlign='center'>\r\n                <Button variant='contained' type = \"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Box>\r\n\r\n</form>\r\n\r\n    </motion.div >\r\n\r\n}\r\n\r\nexport default CodingForm;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"../../scss/core.scss\"\r\nimport \"../../scss/generic.scss\"\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Anim } from \"../../Animation\";\r\n\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport List from \"@mui/material/List\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Divider, Stack } from \"@mui/material\";\r\n\r\nimport emailjs from '@emailjs/browser'\r\n\r\nconst TextEntryField = styled(TextField)({\r\n    '& label.Mui-focused': {\r\n        color: 'white',\r\n    },\r\n    '& .MuiInputBase-input': {\r\n        color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'white',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nfunction ConsultingForm() {\r\n    const form = useRef();\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    function sendEmail(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault(); // Prevent the default form submission\r\n    \r\n        // Extract the form data\r\n\r\n        const form = e.currentTarget;\r\n        const formData = new FormData(e.currentTarget);\r\n    \r\n        // Prepare the template parameters\r\n        const templateParams = {\r\n            name: formData.get('name') || '', // Fallback to empty string if null\r\n            email: formData.get('email') || '',\r\n            company: formData.get('companyname') || '',\r\n            message: formData.get('other') || ''\r\n            // sponsor: (form.querySelector('input[name=\"sponsor\"]') as HTMLInputElement).checked ? 'Yes' : 'No',\r\n            // intern: (form.querySelector('input[name=\"interns\"]') as HTMLInputElement).checked ? 'Yes' : 'No',\r\n            // IT: (form.querySelector('input[name=\"IT\"]') as HTMLInputElement).checked ? 'Yes' : 'No',\r\n            \r\n        };\r\n    \r\n        emailjs\r\n            .send(\"service_sbcmhmr\", \"template_3aj0ied\", templateParams, \"76imFaTEAYXwAt6pw\")\r\n            .then(\r\n                (result) => {\r\n                    console.log(result.text);\r\n                },\r\n                (error) => {\r\n                    console.log(error.text);\r\n                }\r\n            );\r\n\r\n            emailjs\r\n            .send(\"service_3qcfjxw\", \"template_7ad3rjg\", templateParams, \"35zn_rtgX1-qsLE90\")\r\n            .then(\r\n                (result) => {\r\n                    console.log(result.text);\r\n                },\r\n                (error) => {\r\n                    console.log(error.text);\r\n                }\r\n            );\r\n    \r\n        e.currentTarget.reset(); // Reset the form after submission\r\n    }\r\n\r\n\r\n    return <motion.div className=\"l\"\r\n        initial={{ y: 10, opacity: 0 }}\r\n        animate={{ y: 0, opacity: 1 }}\r\n        exit={{ y: -10, opacity: 0 }}\r\n        transition={{ duration: .6 }}\r\n    >\r\n        <form className=\"consulting-form\" onSubmit = {sendEmail}>\r\n            <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                divider={<Divider orientation=\"vertical\" flexItem />}\r\n            >\r\n\r\n                <TextEntryField\r\n                    style={{ width: \"200px\" }}\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    label=\"Name\"\r\n                    name = \"name\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                />\r\n\r\n                <TextEntryField\r\n                    style={{ width: \"200px\" }}\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    name = \"email\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                />\r\n\r\n                <TextEntryField\r\n                    style={{ width: \"200px\" }}\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    label=\"Company Name\"\r\n                    name = \"companyname\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                />\r\n            </Stack>\r\n\r\n            <br />\r\n            <Divider variant=\"middle\" style={{ background: 'white', borderBottomWidth: 1, marginLeft: '4%', marginRight: '4%' }} />\r\n\r\n\r\n            {/* <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n\r\n            >\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Sponsor Lcoal Events?\" name = \"sponsor\"/>\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Need interns?\" name = \"interns\"/>\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Need a project completed?\" />\r\n            </Stack> */}\r\n            <br/>\r\n            \r\n            <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={0}\r\n                \r\n            >\r\n                {/* <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\",\r\n                }} />} label=\"Need IT support?\" name = \"IT\"/>\r\n                <FormControlLabel control={<Checkbox style={{\r\n                    color: \"#FFFFFF\"\r\n                }} checked={checked} onChange={handleChange} />} label=\"\" /> */}\r\n                <TextEntryField\r\n                    style={{ width: \"500px\", }}\r\n                    size=\"medium\"\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    // disabled={!checked}\r\n                    label= \"Message \"\r\n                    InputLabelProps={{\r\n                        style: { color: '#fff', borderColor: 'white' },\r\n                    }}\r\n                    name = \"other\"\r\n                    multiline\r\n                    rows={2}\r\n                    \r\n                />\r\n            </Stack>\r\n            <br />\r\n            <Box textAlign='center'>\r\n                <Button variant='contained' type = \"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Box>\r\n        </form>\r\n    </motion.div >\r\n\r\n\r\n}\r\n\r\nexport default ConsultingForm;","import React, { useEffect, useState } from \"react\";\r\nimport \"../../scss/core.scss\";\r\nimport \"../../scss/pages.scss\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { Anim } from \"../../Animation\";\r\nimport { useTheme } from \"../generic/ThemeContext\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { styled } from \"@mui/system\";\r\nimport Background from \"../../img/form.jpg\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport CodingForm from \"../generic/CodingForm\";\r\nimport ConsultingForm from \"../generic/ConsultingForm\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst Form: React.FC = () => {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [alignment, setAlignment] = useState('consulting');\r\n\r\n    const muiTheme = createTheme({\r\n        palette: {\r\n            primary: { main: \"#FFFFFF\" },\r\n            secondary: { main: '#11cb5f' },\r\n            text: { primary: \"#FFFFFF\" },\r\n        },\r\n    });\r\n\r\n    const handleChange = (event: React.MouseEvent<HTMLElement>, newAlignment: string) => {\r\n        if (newAlignment != null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    };\r\n\r\n    const CustomToggle = styled(ToggleButton)({\r\n        color: \"#FFFFFF\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        theme.setLoadState(-2);\r\n\r\n        // Read the query parameter\r\n        const params = new URLSearchParams(location.search);\r\n        const toggle = params.get('toggle');\r\n        if (toggle === 'education') {\r\n            setAlignment('coding');\r\n        }\r\n    }, [theme, location.search]);\r\n\r\n    return (\r\n        <div className=\"apex-test w-100 h-100 col-cc\">\r\n            <AnimatePresence>\r\n                {theme.loadState === -2 && (\r\n                    <motion.div\r\n                        className=\"document col-st\"\r\n                        variants={Anim.bounceY(1200).spring(240, 0, 30).build()}\r\n                        initial=\"inactive\"\r\n                        animate=\"active\"\r\n                        exit=\"inactive\"\r\n                    >\r\n                        <div\r\n                            className=\"h0 oxanium bold col-cc\"\r\n                            style={{\r\n                                backgroundImage: `url(${Background})`,\r\n                                backgroundSize: \"cover\",\r\n                                backgroundPosition: \"center\",\r\n                                fontSize: \"4rem \",\r\n                                textAlign: \"center\"\r\n                            }}\r\n                        >\r\n                            Sign up to contact us!\r\n                            <motion.div\r\n                                className=\"back\"\r\n                                tabIndex={0}\r\n                                onClick={() => {\r\n                                    theme.setLoadState(-1);\r\n                                    setTimeout(() => {\r\n                                        navigate(\"/\");\r\n                                    }, 500);\r\n                                }}\r\n                            >\r\n                                \r\n                            </motion.div>\r\n                            \r\n                        </div>\r\n                        <ThemeProvider theme={muiTheme}>\r\n                        \r\n                            <div>\r\n                                <ToggleButtonGroup\r\n                                    value={alignment}\r\n                                    exclusive\r\n                                    onChange={handleChange}\r\n                                    color=\"standard\"\r\n                                    sx={{\r\n                                        outlineColor: 'gray',\r\n                                        outlineWidth: '.1em',\r\n                                        outlineStyle: 'solid',\r\n                                        marginLeft: '15px',\r\n                                    }}\r\n                                >\r\n                                    <CustomToggle value=\"consulting\">Consulting</CustomToggle>\r\n                                    <CustomToggle value=\"coding\">Education</CustomToggle>\r\n                                </ToggleButtonGroup>\r\n                            </div>\r\n                        </ThemeProvider>\r\n                        {alignment === \"consulting\" ? <ConsultingForm /> : <CodingForm />}\r\n                        <motion.div\r\n                            tabIndex={0}\r\n                            onClick={() => window.open(\"mailto:adam.lueken@d128.org\")}\r\n                            className=\"click-to col-cc oxanium h6 bold w-100 text-centered\"\r\n                            whileHover={{ boxShadow: \"0 0 1rem white\" }}\r\n                        >\r\n                            Click to contact Adam Lueken (adam.lueken@d128.org) for more information.\r\n                        </motion.div>\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n"],"names":["Anim","i","a","inactive","active","this","stiffness","delay","damping","mass","dur","amt","reverse","afterInstead","type","times","prop","spring","delay_children","transitions","r","duration","opacity","coords","x","y","transform","range","from","to","step","Array","Math","floor","map","_","TextEntryField","styled","TextField","color","borderBottomColor","borderColor","useState","motion","className","initial","animate","exit","transition","onSubmit","e","preventDefault","currentTarget","formData","FormData","templateParams","name","get","email","grade","message","emailjs","then","result","console","log","text","error","reset","Stack","direction","justifyContent","alignItems","spacing","divider","Divider","orientation","flexItem","style","width","size","label","variant","InputLabelProps","background","borderBottomWidth","marginLeft","marginRight","multiline","rows","Box","textAlign","Button","useRef","company","theme","useTheme","navigate","useNavigate","location","useLocation","alignment","setAlignment","muiTheme","createTheme","palette","primary","main","secondary","CustomToggle","ToggleButton","useEffect","setLoadState","URLSearchParams","search","AnimatePresence","loadState","variants","build","backgroundImage","Background","backgroundSize","backgroundPosition","fontSize","tabIndex","onClick","setTimeout","ThemeProvider","ToggleButtonGroup","value","exclusive","onChange","event","newAlignment","sx","outlineColor","outlineWidth","outlineStyle","window","open","whileHover","boxShadow"],"sourceRoot":""}