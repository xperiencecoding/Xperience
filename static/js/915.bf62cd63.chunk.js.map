{"version":3,"file":"static/js/915.bf62cd63.chunk.js","mappings":"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","sources":["Animation.ts","components/generic/CodingForm.tsx","components/generic/ConsultingForm.tsx","components/pages/Form.tsx"],"sourcesContent":["// Custom animations class built on top of framer-motion's variants framework.\n// Uses builder pattern for quick instantiation into objects to maximize reusage.\nexport class Anim {\n\n    inactive: any\n    active: any\n\n    constructor(i: any = {}, a: any = {}) {\n        this.inactive = i;\n        this.active = a;\n        this.active[\"transition\"] = {};\n    }\n\n    spring(stiffness: number, delay: number = 0, damping: number = 10, mass: number = 1) {\n        this.active[\"transition\"][\"stiffness\"] = stiffness;\n        this.active[\"transition\"][\"type\"] = \"spring\";\n        this.active[\"transition\"][\"damping\"] = damping;\n        this.active[\"transition\"][\"mass\"] = mass;\n        this.active[\"transition\"][\"delay\"] = delay;\n        return this;\n    }\n\n    // delay children\n    delay_children(dur: number = 0.5) {\n        this.active[\"transition\"][\"delayChildren\"] = dur;\n        return this;\n    }\n\n    // stagger children\n    stagger(amt = 0.05, reverse = false) {\n        this.active[\"transition\"][\"staggerChildren\"] = amt;\n        this.active[\"transition\"][\"staggerDirection\"] = reverse ? -1 : 1;\n        return this;\n    }\n\n    when(afterInstead = false) {\n        if (!afterInstead) this.active[\"transition\"][\"when\"] = \"beforeChildren\"\n        else this.active[\"transition\"][\"when\"] = \"afterChildren\"\n        return this\n    }\n    loop(type: \"loop\" | \"reverse\" | \"mirror\" = \"mirror\", times: number | \"Infinity\" = \"Infinity\", delay: number = 0) {\n        this.active[\"transition\"][\"repeatType\"] = type\n        this.active[\"transition\"][\"repeat\"] = times\n        this.active[\"transition\"][\"repeatDelay\"] = delay\n        return this\n    }\n\n    add(prop: string, inactive: string, active: string) {\n        this.inactive[prop] = inactive\n        this.active[prop] = active\n        return this;\n    }\n\n    default() {\n        this.spring(100);\n        this.delay_children();\n        return this;\n    }\n\n    // clear transitions if child in staggered animation\n    // transition inherited from parent\n    build(transitions = true, reverse = false) {\n        if (transitions && reverse) this.inactive[\"transition\"] = this.active[\"transition\"]\n        else if (!transitions) {\n            delete this.inactive[\"transition\"]\n            delete this.active[\"transition\"]\n        }\n        let r = {\n            inactive: this.inactive,\n            active: this.active,\n        }\n        return r\n    }\n\n    static getSpring(stiffness = 120, delay = 0, damping = 20, mass = 1) {\n        return {\n            type: \"spring\",\n            stiffness: stiffness,\n            delay: delay,\n            damping: damping,\n            mass: mass,\n        }\n    }\n\n    static opacity(duration: number): Anim {\n        return new Anim({\n            opacity: 0,\n        },{\n            opacity: 1,\n        });\n    }\n\n    static point(coords: [number, number]) {\n        return new Anim({\n            x: coords[0] + \"px\",\n            y: coords[1] + \"px\",\n            opacity: 0,\n        },{\n            x: 0,\n            y: 0,\n            opacity: 1,\n        });\n    }\n\n    static flipX() {\n        return new Anim({\n            transform: \"rotateX(180deg)\"\n        },{\n            transform: \"rotateX(0deg)\",\n        });\n    }\n\n    static flipY() {\n        return new Anim({\n            transform: \"rotateY(180deg)\"\n        },{\n            transform: \"rotateY(0deg)\",\n        });\n    }\n\n    static bounceY(y: number) {\n        return new Anim({\n            y: y + \"px\",\n            opacity: 0,\n        },{\n            y: \"0px\",\n            opacity: 1,\n        });\n    }\n\n    static bounceX(x: number) {\n        return new Anim({\n            x: x + \"px\",\n            opacity: 0,\n        },{\n            x: \"0px\",\n            opacity: 1,\n        });\n    }\n\n    static scale(x: [number, number] = [0, 1], y: [number, number] = [0, 1]) {\n        return new Anim({\n            transform: `scale(${x[0]}, ${y[0]})`,\n            opacity: 0,\n        },{\n            transform: `scale(${x[1]}, ${y[1]})`,\n            opacity: 1,\n        })\n    }\n}\n\nexport function hexToRgb(hex: string) {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex) ?? \"\";\n    return parseInt(result[1], 16) + \",\" +\n        parseInt(result[2], 16) + \",\" +\n        parseInt(result[3], 16) + \",\"\n}\n\nexport function range(from: number, to: number, step: number) {\n    return [...Array(Math.floor((to - from) / step) + 1)].map((_, i) => from + i * step);\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"../../scss/core.scss\"\nimport \"../../scss/generic.scss\"\nimport { motion } from \"framer-motion\";\nimport { Anim } from \"../../Animation\";\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport List from \"@mui/material/List\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { makeStyles, styled } from \"@mui/material/styles\";\nimport { Divider, Stack } from \"@mui/material\";\n\nimport emailjs from '@emailjs/browser'\n\nconst TextEntryField = styled(TextField)({\n    '& label.Mui-focused': {\n        color: 'white',\n    },\n    '& .MuiInputBase-input': {\n        color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: 'white',\n        },\n        '&:hover fieldset': {\n            borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: 'white',\n        },\n    },\n});\n\n\nfunction CodingForm() {\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setChecked(event.target.checked);\n    };\n\n    const [checked, setChecked] = useState(false)\n\n    function sendEmail(e: React.FormEvent<HTMLFormElement>) {\n\n        emailjs\n            .sendForm(\"service_1hcw2wb\", \"template_dvhj2cr\", e.currentTarget, \"7oQ_KOhAcQCiNH2WD\")\n            .then(\n                (result) => {\n                    console.log(result.text);\n                },\n                (error) => {\n                    console.log(error.text);\n                }\n            );\n        e.currentTarget.reset()\n    }\n\n    return <motion.div className=\"l\"\n        initial={{ y: 10, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ y: -10, opacity: 0 }}\n        transition={{ duration: .6 }}\n    >\n        <form className = \"coding-form\" onSubmit={sendEmail}>\n            <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                divider={<Divider orientation=\"vertical\" flexItem />}\n            >\n\n                <TextEntryField\n                    id=\"name\"\n                    style={{ width: \"200px\" }}\n                    size=\"small\"\n                    type=\"text\"\n                    label=\"Name\"\n                    variant=\"outlined\"\n                    name=\"name\"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                />\n\n                <TextEntryField\n                    id=\"email\"\n                    style={{ width: \"200px\" }}\n                    size=\"small\"\n                    type=\"text\"\n                    label=\"Email\"\n                    name=\"email\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                />\n\n                <TextEntryField\n                    id=\"grade\"\n                    style={{ width: \"200px\" }}\n                    size=\"small\"\n                    type=\"text\"\n                    name=\"grade\"\n                    label=\"Grade Level\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                />\n            </Stack>\n            <br />\n            <Divider variant=\"middle\" style={{ background: 'white', borderBottomWidth: 1, marginLeft: '4%', marginRight: '4%' }} />\n\n            <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={0}\n                divider={<Divider orientation=\"vertical\" flexItem />}\n            >\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Beginner coding?\" name=\"beginner\" />\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Intermediate coding?\" name=\"intermediate\" />\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Robotics?\" name=\"robotics\" />\n\n            </Stack>\n\n            <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={0}\n                divider={<Divider orientation=\"vertical\" flexItem />}\n            >\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Web development?\" name=\"web\" />\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\"\n                }} checked={checked} onChange={handleChange} />} label=\"\" />\n\n                <TextEntryField\n                    style={{ width: \"200px\", }}\n                    type=\"text\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    // disabled={!checked}\n                    label=\"Other: \"\n                    name=\"other\"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                />\n            </Stack>\n            <br />\n            <Box textAlign='center'>\n                <Button variant='contained' type=\"submit\">\n                    Submit\n                </Button>\n            </Box>\n        </form>\n    </motion.div >\n\n}\n\nexport default CodingForm;","import React, { useEffect, useState, useRef } from \"react\";\nimport \"../../scss/core.scss\"\nimport \"../../scss/generic.scss\"\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { Anim } from \"../../Animation\";\n\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport List from \"@mui/material/List\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { styled } from \"@mui/material/styles\";\nimport { Divider, Stack } from \"@mui/material\";\n\nimport emailjs from '@emailjs/browser'\n\nconst TextEntryField = styled(TextField)({\n    '& label.Mui-focused': {\n        color: 'white',\n    },\n    '& .MuiInputBase-input': {\n        color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: 'white',\n        },\n        '&:hover fieldset': {\n            borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: 'white',\n        },\n    },\n});\n\n\nfunction ConsultingForm() {\n    const form = useRef();\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setChecked(event.target.checked);\n    };\n\n    const [checked, setChecked] = useState(false)\n\n    function sendEmail(e: React.FormEvent<HTMLFormElement>) {\n        emailjs\n            .sendForm(\"service_1hcw2wb\", \"template_ge3cinu\", e.currentTarget, \"7oQ_KOhAcQCiNH2WD\")\n            .then(\n                (result) => {\n                    console.log(result.text);\n                },\n                (error) => {\n                    \n                }\n            );\n        e.currentTarget.reset()\n    }\n\n\n    return <motion.div className=\"l\"\n        initial={{ y: 10, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ y: -10, opacity: 0 }}\n        transition={{ duration: .6 }}\n    >\n        <form className=\"consulting-form\" onSubmit = {sendEmail}>\n            <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={2}\n                divider={<Divider orientation=\"vertical\" flexItem />}\n            >\n\n                <TextEntryField\n                    style={{ width: \"200px\" }}\n                    size=\"small\"\n                    type=\"text\"\n                    label=\"Name\"\n                    name = \"name\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                />\n\n                <TextEntryField\n                    style={{ width: \"200px\" }}\n                    size=\"small\"\n                    type=\"text\"\n                    name = \"email\"\n                    label=\"Email\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                />\n\n                <TextEntryField\n                    style={{ width: \"200px\" }}\n                    size=\"small\"\n                    type=\"text\"\n                    label=\"Company Name\"\n                    name = \"companyname\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                />\n            </Stack>\n\n            <br />\n            <Divider variant=\"middle\" style={{ background: 'white', borderBottomWidth: 1, marginLeft: '4%', marginRight: '4%' }} />\n\n\n            <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={1}\n\n            >\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Sponsor Lcoal Events?\" name = \"sponsor\"/>\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Need interns?\" name = \"interns\"/>\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Need a project completed?\" />\n            </Stack>\n\n            <Stack\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={0}\n\n            >\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\",\n                }} />} label=\"Need IT support?\" name = \"IT\"/>\n                <FormControlLabel control={<Checkbox style={{\n                    color: \"#FFFFFF\"\n                }} checked={checked} onChange={handleChange} />} label=\"\" />\n                <TextEntryField\n                    style={{ width: \"200px\", }}\n                    size=\"small\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    // disabled={!checked}\n                    label=\"Other: \"\n                    InputLabelProps={{\n                        style: { color: '#fff', borderColor: 'white' },\n                    }}\n                    name = \"other\"\n                />\n            </Stack>\n            <br />\n            <Box textAlign='center'>\n                <Button variant='contained' type = \"submit\">\n                    Submit\n                </Button>\n            </Box>\n        </form>\n    </motion.div >\n\n\n}\n\nexport default ConsultingForm;","import React, { useEffect, useRef, useState, lazy, Suspense } from \"react\";\nimport \"../../scss/core.scss\"\nimport \"../../scss/pages.scss\"\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { Anim } from \"../../Animation\";\nimport { useTheme } from \"../generic/ThemeContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { styled } from '@mui/system';\n\nimport Background from \"../../img/form.jpg\"\n\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\n\nimport CodingForm from \"../generic/CodingForm\"\n\nimport ConsultingForm from \"../generic/ConsultingForm\"\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport { purple } from \"@mui/material/colors\";\n\nfunction Form(props: {}) {\n\n    const theme = useTheme()\n    const navigate = useNavigate()\n\n    const [alignment, setAlignment] = useState('consulting')\n\n    const muiTheme = createTheme({\n        palette: {\n            primary: {\n                // Purple and green play nicely together.\n                main: \"#FFFFFF\",\n            },\n            secondary: {\n                // This is green.A700 as hex.\n                main: '#11cb5f',\n            },\n\n            text: {\n                primary: \"#FFFFFF\",\n            },\n\n        },\n    });\n\n    const layout = [\n        { i: \"a\", x: 0, y: 0, w: 1, h: 1, static: true },\n        { i: \"b\", x: 1, y: 0, w: 1, h: 1, static: true },\n    ];\n\n    const handleChange = (\n        event: React.MouseEvent<HTMLElement>,\n        newAlignment: string,\n    ) => {\n        if (newAlignment != null) {\n            setAlignment(newAlignment)\n        }\n\n    };\n\n    const CustomToggle = styled(ToggleButton)({\n        color: \"#FFFFFF\"\n    })\n\n    useEffect(() => {\n        theme.setLoadState(-2)\n    }, [])\n\n    return <div className=\"apex-test w-100 h-100 col-cc\">\n        <AnimatePresence>\n            {theme.loadState === -2 &&\n                <motion.div className=\"document col-st\" variants={Anim.bounceY(1200).spring(240, 0, 30).build()}\n                    initial=\"inactive\" animate=\"active\" exit=\"inactive\"\n                >\n                    <div className=\"h0 oxanium bold col-cc\" style={{\n                        backgroundImage: `url(${Background})`,\n                        backgroundSize: \"100% auto\",\n                        backgroundPosition: \"50% 50%\",\n                    }}>\n                        Form\n                        <motion.div className=\"back\" tabIndex={0} onClick={() => {\n                            theme.setLoadState(-1);\n                            setTimeout(() => {\n                                navigate(\"/\");\n                            }, 500)\n                        }}>\n                           \n                        </motion.div>\n                    </div>\n                    <ThemeProvider theme={muiTheme}>\n                        <div>\n                            <ToggleButtonGroup\n                                value={alignment}\n                                exclusive\n                                onChange={handleChange}\n                                color=\"standard\"\n                                sx={{ outlineColor: 'gray', outlineWidth: '.1em', outlineStyle: 'solid', marginLeft: '15px' }}\n                            >\n                                <CustomToggle value=\"consulting\">Consulting</CustomToggle>\n                                <CustomToggle value=\"coding\">Education</CustomToggle>\n                            </ToggleButtonGroup>\n                        </div>\n                    </ThemeProvider>\n                    {alignment === \"consulting\" ? <ConsultingForm /> : <CodingForm />}\n\n                    <motion.div tabIndex={0} onClick={() => window.open(\"mailto:adam.lueken@d128.org\")} className=\"click-to col-cc oxanium h6 bold w-100 text-centered\" whileHover={{ boxShadow: \"0 0 1rem white\" }}>\n                        Click to contact Adam Lueken (adam.lueken@d128.org) for more information.\n                    </motion.div>\n                </motion.div>\n            }\n        </AnimatePresence>\n    </div >\n}\n\nexport default Form;"],"names":["Anim","i","a","inactive","active","this","stiffness","delay","damping","mass","dur","amt","reverse","afterInstead","type","times","prop","spring","delay_children","transitions","r","duration","opacity","coords","x","y","transform","range","from","to","step","Array","Math","floor","map","_","TextEntryField","styled","TextField","color","borderBottomColor","borderColor","useState","checked","setChecked","motion","className","initial","animate","exit","transition","onSubmit","e","emailjs","currentTarget","then","result","console","log","text","error","reset","Stack","direction","justifyContent","alignItems","spacing","divider","Divider","orientation","flexItem","id","style","width","size","label","variant","name","InputLabelProps","background","borderBottomWidth","marginLeft","marginRight","FormControlLabel","control","Checkbox","onChange","event","target","Box","textAlign","Button","useRef","props","theme","useTheme","navigate","useNavigate","alignment","setAlignment","muiTheme","createTheme","palette","primary","main","secondary","CustomToggle","ToggleButton","useEffect","setLoadState","AnimatePresence","loadState","variants","build","backgroundImage","Background","backgroundSize","backgroundPosition","tabIndex","onClick","setTimeout","ThemeProvider","ToggleButtonGroup","value","exclusive","newAlignment","sx","outlineColor","outlineWidth","outlineStyle","window","open","whileHover","boxShadow"],"sourceRoot":""}